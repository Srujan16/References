package com.wavemaker.studio.platform.security.handler.preAuth;


import java.security.GeneralSecurityException;

import org.apache.commons.httpclient.HostConfiguration;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpConnection;
import org.apache.commons.httpclient.HttpHost;
import org.apache.commons.httpclient.MultiThreadedHttpConnectionManager;
import org.apache.commons.httpclient.protocol.Protocol;
import org.apache.commons.httpclient.protocol.ProtocolSocketFactory;

import com.gargoylesoftware.htmlunit.HttpWebConnection;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.WebConnection;
import com.gargoylesoftware.htmlunit.ssl.InsecureSSLProtocolSocketFactory;

/**
 * Created by srujant on 12/4/17.
 */
public class WebClientDemo {

//    httpServletRequest.getPort()
//    httpServletRequest.getRemoteHost()


    public static void main(String arg[]) {

        try {

            final WebClient webClient = new WebClient();
            WebConnection webConnection = getWebConnection(webClient);
            webClient.setWebConnection(webConnection);

        } catch (GeneralSecurityException e) {
            throw new RuntimeException(e);
        }


    }

    private static WebConnection getWebConnection(WebClient webClient) throws GeneralSecurityException {
        ProtocolSocketFactory protocolSocketFactory = new InsecureSSLProtocolSocketFactory();
        final Protocol protocol = new Protocol("https", protocolSocketFactory, 80);
        final HttpHost httpHost = new HttpHost("hostName", 80, protocol);
        WebConnection webConnection = new HttpWebConnection(webClient) {
            @Override
            public HttpClient createHttpClient() {

                MultiThreadedHttpConnectionManager multiThreadedHttpConnectionManager = new MultiThreadedHttpConnectionManager() {
                    @Override
                    public HttpConnection getConnection(HostConfiguration hostConfiguration) {
                        hostConfiguration.setHost(httpHost);
                        return super.getConnection(hostConfiguration);
                    }
                };
                return new HttpClient(multiThreadedHttpConnectionManager);
            }
        };
        return webConnection;

    }


}

